<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.dao.ReservationMapper">
    <resultMap id="BaseResultMap" type="mybatis.model.Reservation">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="CUSTOMER_NAME" jdbcType="VARCHAR" property="customerName"/>
        <result column="FROM_DATE" jdbcType="VARCHAR" property="fromDate"/>
        <result column="TO_DATE" jdbcType="VARCHAR" property="toDate"/>

        <collection property="rooms" javaType="ArrayList" ofType="Room"
                    column="id" select="selectRoomsForReservation"/>

    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from PUBLIC.RESERVATION
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="mybatis.model.Reservation"
            useGeneratedKeys="true">
    insert into PUBLIC.RESERVATION (CUSTOMER_NAME, FROM_DATE, TO_DATE
      )
    values (#{customerName,jdbcType=VARCHAR}, #{fromDate,jdbcType=VARCHAR}, #{toDate,jdbcType=VARCHAR}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="mybatis.model.Reservation">
    update PUBLIC.RESERVATION
    set CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      FROM_DATE = #{fromDate,jdbcType=VARCHAR},
      TO_DATE = #{toDate,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select ID, CUSTOMER_NAME, FROM_DATE, TO_DATE
    from PUBLIC.RESERVATION
    where ID = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select ID, CUSTOMER_NAME, FROM_DATE, TO_DATE
    from PUBLIC.RESERVATION
  </select>

    <select id="selectRoomsForReservation" resultType="Room">
        SELECT
            r.id,
            r.NUMBER,
            r.TYPE
        FROM PUBLIC.ROOM r
            JOIN PUBLIC.RESERVATION_ROOM rr ON r.ID = RR.ROOM_ID
        WHERE rr.RESERVATION_ID = #{id,jdbcType=BIGINT}
    </select>

    <select id="getReservationsForHotel" parameterType="java.lang.Long" resultType="Reservation" resultMap="BaseResultMap">
      SELECT DISTINCT res.ID, res.CUSTOMER_NAME, res.FROM_DATE, res.TO_DATE
      FROM PUBLIC.RESERVATION res
        JOIN PUBLIC.RESERVATION_ROOM rr ON res.ID = RR.RESERVATION_ID
        JOIN PUBLIC.ROOM r ON rr.ROOM_ID = r.ID
      WHERE r.HOTEL_ID = #{hotelId,jdbcType=BIGINT}
    </select>
</mapper>